#!/usr/bin/bash

set -e

EXEC="./build/examples/basic_minkowski_3d"
# executable specific args
EXEC_ARGS=""
OUT_DIR="./out/movie_minkowski_3d"

FPS=60 # frames per second
SAMPLES=4
SAVE_FREQUENCY=100
RAY_DEPTH=50
RESOLUTION_FACTOR=8 # >= 2 (for ffmpeg to work)

# time/frame independent parameters
FIXED_ARGS="--samples ${SAMPLES} --save_frequency ${SAVE_FREQUENCY} --ray_depth ${RAY_DEPTH} --resolution_factor ${RESOLUTION_FACTOR} ${EXEC_ARGS} --number_of_rows 12"

FRAME_START=0
FRAME_STOP=60

function timestamp {
    echo "        $(date +%H:%M:%S)"
}

function out {
    FRAME=$1
    echo "${OUT_DIR}/${FRAME}"
}

function ppm {
    FRAME=$1
    echo "${OUT_DIR}/${FRAME}.ppm"
}


function png {
    FRAME=$1
    echo "${OUT_DIR}/${FRAME}.png"
}

function convert2png {
    FRAME=$1
    pnm2png $(ppm ${FRAME}) $(png ${FRAME}) \
    && rm $(ppm ${FRAME})
}

function render_frame {
    FRAME=$1
    TIME=$(echo "${FRAME}/${FPS}" | bc -l)
    echo "frame = ${FRAME}, time = ${TIME}"
    ${EXEC} \
    --out $(out ${FRAME}) \
    --time ${TIME} \
    ${FIXED_ARGS} \
    > /dev/null

}

function make_frames {
    timestamp
    for FRAME in $(seq -f "%05g" ${FRAME_START} ${FRAME_STOP})
    do
        render_frame ${FRAME}
        convert2png ${FRAME}
        timestamp
    done

}

function make_mp4 {
    ffmpeg -r ${FPS} -i $(png "%05d") -vcodec libx264 -pix_fmt yuv420p "${OUT_DIR}/mov.mp4"
}


# ENTRY POINT

make "${EXEC}"
mkdir -p "${OUT_DIR}"

echo "make movie for ${EXEC}:"
make_frames
make_mp4
